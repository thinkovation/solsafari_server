name: Build and Deploy Go App

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Add your private key to GitHub secrets
      REMOTE_USER: ${{ secrets.REMOTE_USER }}  # Add remote user to GitHub secrets
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}  # Add remote host to GitHub secrets
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }}  # Add remote path to GitHub secrets
      APP_NAME: ${{ secrets.APP_NAME }}  # Add App name to GitHub secrets

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Replace with your desired Go version

    - name: Build
      run: |
        go build -o $APP_NAME  # Adjust the command according to your project structure

    - name: Copy binary to remote server
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        scp -o StrictHostKeyChecking=no ./$APP_NAME $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/$APP_NAME.new
        ls
        ls assets/
        scp -r -o StrictHostKeyChecking=no assets/swagger $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/assets/swagger

    - name: Restart service on remote server
      run: |
        ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
          sudo systemctl stop $APP_NAME.service  # Adjust this to your service name
          cp $REMOTE_PATH/$APP_NAME.new $REMOTE_PATH/$APP_NAME  # Adjust this path to your binary location
          sudo systemctl start $APP_NAME.service  # Adjust this to your service name
        EOF
